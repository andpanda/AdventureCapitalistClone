{"code":"import { __extends } from \"tslib\";\r\nimport 'phaser';\r\nimport { Investment } from './Investment';\r\nimport { StringFormatUtils } from '../com.andre.utils/StringFormatUtils';\r\nimport { PlayerData } from '../com.andre.system/PlayerData';\r\nimport { GameData } from '../com.andre.system/GameData';\r\nvar MainScreen = /** @class */ (function (_super) {\r\n    __extends(MainScreen, _super);\r\n    function MainScreen() {\r\n        var _this = _super.call(this, 'mainscreen') || this;\r\n        _this.investments = new Array();\r\n        return _this;\r\n    }\r\n    //preload all game assets first\r\n    MainScreen.prototype.preload = function () {\r\n        //investment icons√û\r\n        for (var i = 0; i < 10; i++) {\r\n            var n = (i + 1);\r\n            this.load.image('investment_logo_' + n, 'assets/Investment/Icons/invest_' + n + '.png');\r\n        }\r\n        this.load.image('ref', 'assets/ref.png');\r\n        this.load.image('ref2', 'assets/ref2.png');\r\n        this.load.image('investment-frame', 'assets/Investment/investment-frame.png');\r\n        this.load.image('investment-progress-bg', 'assets/Investment/investment-progress-bg.png');\r\n        this.load.image('investment_bubble', 'assets/Investment/investment_bubble.png');\r\n        this.load.image('invest_btn', 'assets/Investment/invest_btn.png');\r\n        this.load.image('invest_btn_pressed', 'assets/Investment/invest_btn_pressed.png');\r\n        this.load.image('invest_btn_disabled', 'assets/Investment/invest_btn_disabled.png');\r\n        this.load.image('meter_green', 'assets/Investment/MeterGreen.png');\r\n        this.load.image('inactive_investment', 'assets/Investment/inactive_investment.png');\r\n        this.load.image('investment_purchase', 'assets/Investment/investment_purchase.png');\r\n        11;\r\n        this.load.image('menu_option', 'assets/Misc/menu_option.png');\r\n    };\r\n    MainScreen.prototype.create = function () {\r\n        var _this = this;\r\n        //this was used as a reference guide for the UI\r\n        var ref = this.add.image(this.cameras.default.width / 2, this.cameras.default.height / 2, 'ref');\r\n        //ref.alpha = 0.5; \r\n        //localStorage.clear();\r\n        GameData.Load();\r\n        PlayerData.money = 1000000;\r\n        this.CheckOfflineEarnings();\r\n        this.moneyLabel = this.add.text(250, 12, '$ 0.00', { font: '50px Arial' });\r\n        var k = 0;\r\n        var offsetX = 0;\r\n        //draw the buttons\r\n        for (var i = 0; i < 10; i++) {\r\n            if (i == 5) {\r\n                offsetX = 400;\r\n                k = 0;\r\n            }\r\n            this.investments.push(new Investment(this, (i + 1), 322 + offsetX, 146 + 96 * k, GameData.investmentsData[i]));\r\n            k++;\r\n        }\r\n        var menuTitles = ['Unlocks', 'Upgrades', 'Managers', 'Investors'];\r\n        for (var i = 0; i < menuTitles.length; i++) {\r\n            var menuOption = this.add.image(122, 224 + 73 * i, 'menu_option');\r\n            menuOption.scale = 0.45;\r\n            var menuTitle = menuTitles[i];\r\n            var menuText = this.add.text(menuOption.x - 12, menuOption.y - 10, menuTitle, { color: 'grey' });\r\n            if (menuTitle == 'Managers') {\r\n                menuOption.setInteractive({ useHandCursor: true })\r\n                    .on('pointerdown', function () {\r\n                    _this.OnOpenManagers();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    MainScreen.prototype.update = function () {\r\n        console.log('merda');\r\n        this.moneyLabel.text = StringFormatUtils.FormatMoney(PlayerData.money);\r\n        for (var i = 0; i < this.investments.length; i++) {\r\n            this.investments[i].update();\r\n        }\r\n    };\r\n    MainScreen.prototype.CheckOfflineEarnings = function () {\r\n        var totalEarned = 0;\r\n        for (var i = 0; i < GameData.investmentsData.length; i++) {\r\n            var inv = GameData.investmentsData[i];\r\n            if (inv.haveManager) {\r\n                var timeleft = inv.endTime - Date.now();\r\n                if (timeleft < 0) {\r\n                    var timesEarned = Math.floor(Math.abs(timeleft) / (inv.duration * 1000));\r\n                    totalEarned = timesEarned * (inv.revenue * inv.own);\r\n                }\r\n            }\r\n        }\r\n        PlayerData.money += totalEarned;\r\n        GameData.Save();\r\n    };\r\n    MainScreen.prototype.OnOpenManagers = function () {\r\n        var ref = this.add.image(this.cameras.default.width / 2, this.cameras.default.height / 2, 'ref2');\r\n        ref.alpha = 0.5;\r\n    };\r\n    return MainScreen;\r\n}(Phaser.Scene));\r\nexport default MainScreen;\r\n","references":["/Applications/Projects/AdventureCapitalistClone/node_modules/phaser/types/phaser.d.ts","/Applications/Projects/AdventureCapitalistClone/src/com.andre.ui/Investment.ts","/Applications/Projects/AdventureCapitalistClone/src/com.andre.utils/StringFormatUtils.ts","/Applications/Projects/AdventureCapitalistClone/src/com.andre.system/PlayerData.ts","/Applications/Projects/AdventureCapitalistClone/src/com.andre.system/GameData.ts"]}
